INSERT INTO course (course_name,course_description)
VALUES
    ('Java Developer',
     'Освоите профессию с нуля за 10 месяцев. Будете много практиковаться — в том числе на проектах от реальных заказчиков, чтобы сразу стартовать в IT.'
    );

INSERT INTO chapter(chapter_name,chapter_description,course_id)
VALUES
    ('Основы,синтаксис языка',
     'Java - это простой, объектно-ориентированный и высокоэффективный язык программирования. Одна из его основных целей - облегчить и ускорить процесс обучения. Чтобы успешно написать программу на Java, достаточно запомнить основные ключевые слова, и ваш код будет корректно выполнен',
     1
    ),

    ('Условия, условные операторы',
     'Условия в Java подобны магии, которая позволяет нам создавать виртуальные миры, где переменные и операторы - наши строительные блоки, и каждое принятое решение определяет путь развития этого мира.',
     1
    );


INSERT INTO lesson (lesson_name,lesson_description,lesson_content,chapter_id)
VALUES (
           'Переменные',
           'Не говори до свидания, скажи Java, и твоя дружба с программированием будет продолжаться!',
           'Java - это простой, объектно-ориентированный и высокоэффективный язык программирования. Одна из его основных целей - облегчить и ускорить процесс обучения. Чтобы успешно написать программу на Java, достаточно запомнить основные ключевые слова, и ваш код будет корректно выполнен.

   Давайте рассмотрим первый простой пример программы на Java:

   Main.java


       public class Main{
          public static void main(String[] args) {
              int a = 10;
              int b = 20;
              System.out.println(a+b);
          }
       }

   При запуске данного кода, мы создаем два числа, a и b, которые равны 10 и 20 соответственно. Затем, выводим их сумму (a+b), которая равняется 30. Если разобрать программу, которую мы написали выше, то мы видим что она начинается с ключевого слова,что означает что я создаю класс, под названием Main. Причем, название класса должно быть один в один одинаковым с названием файла исходного кода (Main.java). Например, если вы решили назвать файл - Hello.java, то первая строка кода будет выглядеть таким образом',
           1),

       (
           'Условия',
           'Условия в Java подобны магии, которая позволяет нам создавать виртуальные миры, где переменные и операторы - наши строительные блоки, и каждое принятое решение определяет путь развития этого мира.',
           'Условия if В повседневной жизни мы очень часто применяем условия
                  Например:мы просыпаемся и начинаем завтракать. Если чайник вскипел, то мы отключаем его. Если еще нет, то ждем, пока он не вскипит. Мы начинаем одеваться и идем на работу. Если мы опаздываем, то заказываем такси; иначе, не спеша, идем пешком минут 25. Если после работы мы голодны, то идем ужинать. Если дома нет еды, то мы заказываем. Так можно до бесконечности прописывать алгоритм условий нашей жизни. Одним словом, мы всегда действуем и принимаем решения в зависимости от ситуации (входных данных). Точно также в программировании можно создавать условия действия в зависимости от переменных и их значений.
                  Например: я ввожу число. Если это число больше 10, то я вывожу текст "YES":

Main.java


    import java.util.Scanner;
    public class Main{
       public static void main(String[] args) {
           Scanner in = new Scanner(System.in);
           int a = in.nextInt();
           if(a>10){
               System.out.println("YES");
           }
           System.out.println("Program ended");
       }
    }

При запуске программы, если я введу, например 20',
           2);
